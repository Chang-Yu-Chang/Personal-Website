<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Chang-Yu Chang on Chang-Yu Chang</title>
    <link>/</link>
    <description>Recent content in Chang-Yu Chang on Chang-Yu Chang</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018</copyright>
    <lastBuildDate>Sun, 15 Oct 2017 00:00:00 -0400</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Custom Domain and Commenting</title>
      <link>/post/customized-domain-and-commenting/</link>
      <pubDate>Wed, 18 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/customized-domain-and-commenting/</guid>
      <description>

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.changyuchang.name/post/customized-domain-and-commenting/#customized-domain&#34; target=&#34;_blank&#34;&gt;Custom domain&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.changyuchang.name/post/customized-domain-and-commenting/#commenting-plug-in&#34; target=&#34;_blank&#34;&gt;Commenting plug-in&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A quick update about new functions of this website. Two slight changes I have made: relocate the website to a customized domain, and enabling the commenting function.&lt;/p&gt;

&lt;p&gt;In case you want to know how this website was intially built, I wrote a &lt;a href=&#34;https://www.changyuchang.name/post/how-to-build-up-this-website/&#34; target=&#34;_blank&#34;&gt;guide&lt;/a&gt;. It&amp;rsquo;s a simple guide that contains other well-written tutorials and some caveats I&amp;rsquo;ve encounterd.&lt;/p&gt;

&lt;h1 id=&#34;custom-domain&#34;&gt;Custom domain&lt;/h1&gt;

&lt;p&gt;Again, I found myself struggling with the terms for a while. Here I provide the basic definitions for the terms not only used in this guide, but probably popping up in other tutorials. These definitions are mostly from the &lt;a href=&#34;https://www.netlify.com/docs/custom-domains/&#34; target=&#34;_blank&#34;&gt;guide&lt;/a&gt; provided by netlify.&lt;/p&gt;

&lt;h3 id=&#34;terms&#34;&gt;Terms&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;domain name (or domain for short): full name used to access a site. For example, &lt;code&gt;changyuchang.netlify.com&lt;/code&gt; or  &lt;code&gt;www.changyuchang.name&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;custom domain: in this case, a non-netlify assigned domain. Simply speaking, a &amp;ldquo;website link&amp;rdquo; that does not have &lt;code&gt;netlify.com&lt;/code&gt; as suffix. For example, &lt;code&gt;www.changyuchang.name&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;domain registrar: company that lets you buy and register a domain name. I used &lt;a href=&#34;https://www.godaddy.com&#34; target=&#34;_blank&#34;&gt;GoDaddy&lt;/a&gt; without any specific reason.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;DNS (Domain Name System): a system that translates domain names (basically in English and human readable) to IP addresses (numbers and computer readable).&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;DNS servers (or nameserver): a server where DNS is implemented.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;DNS provider: company that maintains the DNS servers.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;hostnames: nameservers that are provided by netlify.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;HTTPS (Hypertext Transfer Protocol Secure): here is the definition from Google &amp;ldquo;an internet communication protocol that protects the integrity and confidentiality of data between the user&amp;rsquo;s computer and the site&amp;rdquo;. My understanding is &amp;hellip; use it to protect yourself and the website!&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;now-you-are-ready-to-set-up-a-custom-domain&#34;&gt;Now you are ready to set up a custom domain&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;First, buy a domain you like. I use &lt;a href=&#34;https://www.godaddy.com&#34; target=&#34;_blank&#34;&gt;GoDaddy&lt;/a&gt; without any specific reason. Since this domain is for personal website, I chose a domain name &lt;code&gt;changyuchang.name&lt;/code&gt; and luckily (this name is not common haha) nobody has registered for it. You can buy the plan whatever the period you want to maintain this domain.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Second, go to netlify, the website deployment we used. Go to domain setting and add custom domain. Paste the domain, in my case, &lt;code&gt;www.changyuchang.name&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Now netlify asked you to configure the DNS provider. One way netlify provided is to point your domain’s nameservers at netlify. What does that mean? Netlify gave me four custom hostnames, something like &lt;code&gt;dns1.p05.nsone.net&lt;/code&gt;, assigned to my DNS zone. Go back to GoDaddy, and edit the DNS of your domain. You will find a section called Nameservers where you can add custom nameservers. Simply paste the four hostnames to this section.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;This process may take hours. I waited until the next day I modified these settings.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Last, encrypt the website by HTTPS. This only requires a simple click on the following section in netlify.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Woohoo! Now you have a website domain which is not under netlify domain.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;commenting-plug-in&#34;&gt;Commenting plug-in&lt;/h1&gt;

&lt;p&gt;We have to use an external commenting plug-in for the site. Although &lt;code&gt;blogdown&lt;/code&gt; does not have an internal commenting function, it and the theme hugo-lithium-theme do have default setting ready for commenting plug-in, which is &lt;a href=&#34;https://disqus.com/&#34; target=&#34;_blank&#34;&gt;Disqus&lt;/a&gt;. Here is how it works:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Sign up in Disqus, and create a new site. Type in Website Name and Shortname. Website Name is not important, but make sure you remember the Shortname. We are going to use this Shortname in the configuration file &lt;code&gt;config.toml&lt;/code&gt; (this should be something you are familiar with) in the R project that contains the source code for website.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;In &lt;code&gt;config.toml&lt;/code&gt; of the theme hugo-lithium-theme, there is a option called &lt;code&gt;disqusShortname&lt;/code&gt;. Paste the short name in between quotation marks. If you are not sure with the Shortname, go back to the website setting on Disqus and check.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Oh oh, don&amp;rsquo;t commit and push the source code yet. You also have to set up a functional &lt;code&gt;baseurl&lt;/code&gt; (the first option in &lt;code&gt;config.toml&lt;/code&gt;). This should be the domain for this website, which is, in my case, &amp;ldquo;&lt;a href=&#34;https://www.changyuchang.name/&amp;quot;&#34; target=&#34;_blank&#34;&gt;https://www.changyuchang.name/&amp;quot;&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Now you can commit and push the source code to github. See the commeting plug-in after each post.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are &lt;a href=&#34;https://help.disqus.com/installation/disqus-appearance-tweaks&#34; target=&#34;_blank&#34;&gt;display configuration&lt;/a&gt; that you can play with Disqus, but I haven&amp;rsquo;t gone through any detail.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Generalized Birthday Problem: Rcpp</title>
      <link>/post/generalized-birthday-problem-rcpp/</link>
      <pubDate>Fri, 30 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/generalized-birthday-problem-rcpp/</guid>
      <description>&lt;p&gt;In the previous &lt;a href=&#34;https://changyuchang.name/post/generalized-birthday-problem/&#34;&gt;post&lt;/a&gt;, I tried to use some algorithms to speed up simulation. Now in this post, I will introduce a pretty powerful package &lt;code&gt;Rcpp&lt;/code&gt;, which has the potential to fundementally change the way you do simulation if you want to employ a time-consuming simulation in R. Let’s finish this project!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://changyuchang.name/post/generalized-birthday-problem-rcpp/#rcpp&#34;&gt;Rcpp&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://changyuchang.name/post/generalized-birthday-problem-rcpp/#generalized-birthday-problem&#34;&gt;Generalized birthday problem&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&#34;rcpp&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Rcpp&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Rcpp&lt;/code&gt; is basically a package that incorporates C++ code in R. For me, using &lt;code&gt;Rcpp&lt;/code&gt; means my code can work faster while I can still enjoy the convenience of many versatile R packages. A simple way to use &lt;code&gt;Rcpp&lt;/code&gt; is the function &lt;code&gt;cppFunction&lt;/code&gt;. C++ code comes in as text in your R script. In this example, I define the function &lt;code&gt;simulateC&lt;/code&gt;, which simulates and calculate the probility of a birthday shared by at least &lt;em&gt;k&lt;/em&gt; persons in a room size of &lt;em&gt;room&lt;/em&gt; (sorry for inconsistent notation, but I prefer i as index in a loop). I am totally not an expert in C++, so I am not goint through the code (this script is my first C++ script, to be honest). This is just to give a taste of how fast a function created by &lt;code&gt;Rcpp&lt;/code&gt; can be.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(Rcpp)
cppFunction(&amp;quot;
#include &amp;lt;Rcpp.h&amp;gt;
using namespace Rcpp;
// [[Rcpp::export]]
float simulateC (int k, int room, int replicate) {
  IntegerVector result (replicate); 
  for (int r=0; r&amp;lt;replicate; r++){
    IntegerVector counts(365);
    for (int i=0; i&amp;lt;room; i++) {
      int pos = rand() % 365;
      if (pos &amp;lt; 365 &amp;amp;&amp;amp; pos &amp;gt;= 0) counts[pos] ++;
    } 
    if (max(counts) &amp;gt;= k) {
      result[r] = TRUE;
    } else result[r] = FALSE;
  }
  float prob = float(sum(result))/float(replicate);
  return prob;
}
&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let’s benchmark the time spent by either &lt;code&gt;tabulate&lt;/code&gt; or &lt;code&gt;Rcpp&lt;/code&gt; method. &lt;code&gt;rbenchmark&lt;/code&gt; is a package that we can measure the computer time consumed.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(rbenchmark)
k &amp;lt;- 2
room &amp;lt;- 23
r &amp;lt;- 10000
set.seed(1)
b &amp;lt;- benchmark(Rcpp = {
    simulateC(k = 2, room = room, replicate = r)
}, Tabulate = {
    birth &amp;lt;- matrix(sample(1:365, r * room, replace = TRUE), 
        nrow = r, ncol = room)
    sum(apply(birth, 1, function(x) max(tabulate(x)) &amp;gt;= k))/r
}, replications = 1000, columns = c(&amp;quot;test&amp;quot;, &amp;quot;elapsed&amp;quot;, &amp;quot;replications&amp;quot;, 
    &amp;quot;relative&amp;quot;))

b&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##       test elapsed replications relative
## 1     Rcpp   7.643         1000    1.000
## 2 Tabulate  65.545         1000    8.576&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Bascially, &lt;code&gt;benchmark&lt;/code&gt; runs each methods for 1000 times, and compare the time consumed. It takes 7.643/1000 = 0.007643 seconds for a run of &lt;code&gt;simulateC(k=2, room=23, replicate=1e4)&lt;/code&gt; and 0.065545 seconds for a run of &lt;code&gt;tabulate&lt;/code&gt; method. So on average, the &lt;code&gt;Rcpp&lt;/code&gt; method is 8.576 times faster than &lt;code&gt;tabulate&lt;/code&gt; methods.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;generalized-birthday-problem&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Generalized Birthday Problem&lt;/h3&gt;
&lt;p&gt;This is the finall verison of function in generalized birthday problem project. Simply replace the code for simulation of one room size by &lt;code&gt;simulateC&lt;/code&gt;. Now we can try large room size and large replicates that are unbelievably time-consuming if we do it withou RCpp.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(Rcpp)
gbp_rcpp &amp;lt;- function(k = 2, p = 0.5, B_l = 1000, B_u = 20000, 
    threshold = 0.001) {
    i &amp;lt;- k  # Tested room size; start from k persons in a room
    x &amp;lt;- 1  # Counter for while loop
    L &amp;lt;- 0  # Lower bound for binary search
    R &amp;lt;- k^4 + 100 + sample(-k:k, 1)  # Upper bound for binary search
    
    # Create an empty data frame for result
    result &amp;lt;- setNames(data.frame(matrix(0, 100, 3)), c(&amp;quot;room&amp;quot;, 
        &amp;quot;p&amp;quot;, &amp;quot;replicate&amp;quot;))
    
    while (abs(result$room[x] - p) &amp;gt;= threshold) {
        # Increase replicate when approaching target room size
        r &amp;lt;- floor(-B_u/(1 + exp(-0.03 * ((R - L) - 200)))) + 
            (B_u + B_l)
        result$replicate[x] &amp;lt;- r
        
        # Test room size i
        i &amp;lt;- ceiling((L + R)/2)
        result$room[x] &amp;lt;- i
        
        # Calculate probability by running simulation in C++
        result$p[x] &amp;lt;- simulateC(k = k, room = i, replicate = r)
        if (result$p[x] &amp;gt;= p) 
            R &amp;lt;- i
        if (result$p[x] &amp;lt; p) 
            L &amp;lt;- i
        
        # Break the loop if trapped
        if (sum(duplicated(tail(result$room[1:x], 2))) == 1 &amp;amp; 
            result$room[x] != 0) 
            break
        
        # Print out room sizes tested
        cat(paste0(&amp;quot;Room size tested:&amp;quot;, i, &amp;quot;\tprobability:&amp;quot;, 
            round(result$p[x], 3), &amp;quot;\treplicate size: &amp;quot;, r, &amp;quot;\n&amp;quot;))
        
        # Counter for steps
        x &amp;lt;- x + 1
    }
    ans &amp;lt;- R
    return(list(answer = ans, result = result[1:x, ]))
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let’s try test the ideal room size for &lt;em&gt;k=8&lt;/em&gt; and &lt;em&gt;p=0.5&lt;/em&gt;. When approaching the ideal room size, increase the replicate size up to one million.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;set.seed(1)
system.time(y_rcpp &amp;lt;- gbp_rcpp(k = 8, p = 0.5, B_u = 1e+06))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Room size tested:2096    probability:1   replicate size: 1000
## Room size tested:1048    probability:0.964   replicate size: 1000
## Room size tested:524 probability:0.037   replicate size: 1000
## Room size tested:786 probability:0.49    replicate size: 1060
## Room size tested:917 probability:0.804   replicate size: 135703
## Room size tested:852 probability:0.646   replicate size: 888952
## Room size tested:819 probability:0.557   replicate size: 983363
## Room size tested:803 probability:0.514   replicate size: 994373
## Room size tested:795 probability:0.492   replicate size: 996889
## Room size tested:799 probability:0.503   replicate size: 997858
## Room size tested:797 probability:0.497   replicate size: 998213
## Room size tested:798 probability:0.5 replicate size: 998374&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    user  system elapsed 
##  47.737   0.537  57.407&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;y_rcpp&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## $answer
## [1] 798
## 
## $result
##    room         p replicate
## 1  2096 1.0000000      1000
## 2  1048 0.9640000      1000
## 3   524 0.0370000      1000
## 4   786 0.4896227      1060
## 5   917 0.8037553    135703
## 6   852 0.6463184    888952
## 7   819 0.5572042    983363
## 8   803 0.5140676    994373
## 9   795 0.4922083    996889
## 10  799 0.5027779    997858
## 11  797 0.4972315    998213
## 12  798 0.5001422    998374
## 13  798 0.5006149    998452&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we have confident to say the ideal room size for &lt;em&gt;k=8&lt;/em&gt; is 798.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Generalized Birthday Problem</title>
      <link>/post/generalized-birthday-problem/</link>
      <pubDate>Wed, 14 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/generalized-birthday-problem/</guid>
      <description>&lt;p&gt;This tiny project comes from the coding class I am taking this semester. The simplest birthday problem is as followed: how many people should be in a room such that the probability of a birthday shared by at least two persons is just above 0.5? I found this problem is very interesting. Throughout the process dealing this problem, some powerful R packages and essential coding skills are incorporated for more efficient simulation. In this project, I will try to address generalized birthday problem in an intuitive way (easy coding but computer expensive and slow) to somehow more advanced approaches.&lt;/p&gt;
&lt;p&gt;Here is the outline for this article&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://changyuchang.name/post/generalized-birthday-problem/#what&amp;#39;s-probability-of-one-birthday-shared-by-two-persons-in-any-size-of-room?&#34;&gt;What’s probability of one birthday shared by two persons in any size of room?&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://changyuchang.name/post/generalized-birthday-problem/#binary-search&#34;&gt;Binary search&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://changyuchang.name/post/generalized-birthday-problem/#replicate-size&#34;&gt;Replicate size&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&#34;whats-probability-of-one-birthday-shared-by-two-persons-in-any-size-of-room&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;What’s probability of one birthday shared by two persons in any size of room?&lt;/h3&gt;
&lt;p&gt;The probability we are interested calculated such that a birthday shared by at least &lt;em&gt;k&lt;/em&gt; persons. The targeted probability &lt;em&gt;p&lt;/em&gt; here is 0.5. For each room size &lt;em&gt;i&lt;/em&gt;, &lt;em&gt;r&lt;/em&gt; replicates are tested.&lt;/p&gt;
&lt;p&gt;In the following case, I did only 20 replicates.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;k &amp;lt;- 2                # Birthday shared by k persons
p &amp;lt;- 0.5              # Targetd probability
r &amp;lt;- 20               # Replicates
result &amp;lt;- rep(0, 100) # A vector for saving result 
i &amp;lt;- 10                  # Room size&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now here is trick. For each room size, create a single matrix that has &lt;em&gt;r&lt;/em&gt; rows and &lt;em&gt;i&lt;/em&gt; columns. The next step is to check by row: if there are at least &lt;em&gt;k=2&lt;/em&gt; persons in one room (&lt;em&gt;i=10&lt;/em&gt;) sharing the same birthday, return &lt;code&gt;TRUE&lt;/code&gt;. Use &lt;code&gt;apply&lt;/code&gt; to implicitly loop through each row. The result probability would be the sum of this vector divided by total replicate &lt;em&gt;r&lt;/em&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;set.seed(12345)
birth &amp;lt;- matrix(sample(1:365, r*i, replace=TRUE), nrow=r, ncol=i)
birth&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]
##  [1,]  264  166  286  289  318  108  205  191  271    62
##  [2,]  320  120  157   95  188  226  188  254  218   150
##  [3,]  278  353  339  360    4  356   33   79  311    72
##  [4,]  324  259  283  277    8  226  250  230  298    95
##  [5,]  167  236   95  358   53  191  260   54  139   355
##  [6,]   61  143  118   80  112  330  293  351  180   297
##  [7,]  119  255   22  347  302  233  345  362  363   127
##  [8,]  186  199   16   55  184  316   69  182   64   343
##  [9,]  266   83   21  220  294   92  102  336  305    60
## [10,]  362  177  229  346   23   79  283  136  145    58
## [11,]   13  290  353  252  339  223   13  302  354   276
## [12,]   56    3  302  185  295  140  246  205   69   324
## [13,]  269   69  115  137   29  276  297  291  274   112
## [14,]    1  249   78  123  220  139  243  129  113   114
## [15,]  143  136  268   18  261  291  345   77  139   360
## [16,]  169  132  183  226  188  331  320  287  275     3
## [17,]  142  318  267  351  263  360  255  250  258   101
## [18,]  147  331   30  240  274  215   68  158  337   292
## [19,]   66  226  159  187   35    4   36  309  291    89
## [20,]  348   49   87   55  146  118  295  220  303   168&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The probability for 2 persons sharing the same birthday in a room with 10 persones is roughly 0.1.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sum(apply(birth, 1, function(x) max(tabulate(x))&amp;gt;=k )) / r&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.1&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now test different room sizes. Say I wanna test room sizes ranging from &lt;em&gt;k&lt;/em&gt; to 100 (testing room size smaller than &lt;em&gt;k&lt;/em&gt; is nonsense). Use &lt;code&gt;for&lt;/code&gt; loop to go through room size from k to 100.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;k &amp;lt;- 2                # Birthday shared by k persons
p &amp;lt;- 0.5              # Targetd probability
r &amp;lt;- 100000           # Replicates
result &amp;lt;- rep(0, 100) # A vector for saving result 

system.time({         # Record time used
for (i in 1:100) {    # Test room sizes from 1 to 100 persons
  birth &amp;lt;- matrix(sample(1:365, r*i, replace=TRUE), nrow=r, ncol=i)
  result[i] &amp;lt;- sum(apply(birth, 1, function(x) max(tabulate(x))&amp;gt;=k )) / r
}
})&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    user  system elapsed 
##  55.684   4.624  60.952&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This simulation is extremely slow. Something is pretty obvious, for example, if I already know the result is going to be 23 just after calculating it, I don’t need to do the else (24-100), which consumes tons of time. For the rest of this post and maybe the other post, I will introduce some ways to speed up the simulation or make it more accurracy.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(result, type=&amp;quot;l&amp;quot;, xlab=&amp;quot;room size&amp;quot;, ylab=&amp;quot;probability&amp;quot;, main=&amp;quot;probability of a birthday shared by k persons&amp;quot;)
abline(h=p, col=&amp;quot;red&amp;quot;) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2018-03-14-generalized-birthday-problem_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The answer is 23 persons.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;min(which(result&amp;gt;p))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 23&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;binary-search&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Binary search&lt;/h3&gt;
&lt;p&gt;If I know where I stand is still far away from the target probability, can I apply a larger step, not step-by-step, in order to move quickly? A good way is to employ binary search algorithm. The key concept is to skip unecessary mid-points (in our case, room sizes) for saving computer time. Given a series of &lt;em&gt;n&lt;/em&gt; sorted room sizes ranging from lower bound &lt;span class=&#34;math inline&#34;&gt;\(L=1\)&lt;/span&gt; to upper bound &lt;span class=&#34;math inline&#34;&gt;\(R=n\)&lt;/span&gt;, then the corresponding probability of at least k people sharing the same birthday are &lt;span class=&#34;math inline&#34;&gt;\(p_1, p_2, \dots, p_n\)&lt;/span&gt;). Our goal is to find the probability of room size that is close and slightly large than 0.5 &lt;span class=&#34;math inline&#34;&gt;\(p_t=0.5\)&lt;/span&gt;. Here is the procedure:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Set L to 1 and R to n. R would be always larger than L.&lt;/li&gt;
&lt;li&gt;Calculate i (position fo the middle element). Set i to ceiling since the room size should be an integer.&lt;/li&gt;
&lt;li&gt;If &lt;span class=&#34;math inline&#34;&gt;\(p_i&amp;lt;p_t\)&lt;/span&gt;, set L to i + 1 and go to step 2.&lt;/li&gt;
&lt;li&gt;If &lt;span class=&#34;math inline&#34;&gt;\(p_i&amp;gt;p_t\)&lt;/span&gt;, set R to i − 1 and go to step 2.&lt;/li&gt;
&lt;li&gt;Repeat step 2-4 until &lt;span class=&#34;math inline&#34;&gt;\(p_i=p_t\)&lt;/span&gt;, the search is done. m is our answer.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gbp &amp;lt;- function(k=2, p=.5, r=100000, threshold=.001) {
  i &amp;lt;- k                       # Tested room size; start from k persons in a room
  x &amp;lt;- 1                       # Counter for while loop
  L &amp;lt;- 0                       # Lower bound for binary search
  R &amp;lt;- k^4+100+sample(-k:k, 1) # Upper bound for binary search
  
  # Create an empty data frame for result
  result &amp;lt;- setNames(data.frame(matrix(0, 100, 2)), c(&amp;quot;room&amp;quot;, &amp;quot;p&amp;quot;))
  
  while (abs(result$room[x] - p) &amp;gt;= threshold) {
    # Test room size i
    i &amp;lt;- ceiling((L+R)/2)
    result$room[x] &amp;lt;- i
    
    # Calculate probability
    birth &amp;lt;- matrix(sample(1:365, r*i, replace=TRUE), nrow=r, ncol=i)
    result$p[x] &amp;lt;- sum(apply(birth, 1, function(x) max(tabulate(x))&amp;gt;=k )) / r
    if (result$p[x] &amp;gt;= p) R &amp;lt;- i
    if (result$p[x] &amp;lt; p) L &amp;lt;- i
    
    # Break the loop if trapped
    if(sum(duplicated(tail(result$room[1:x], 2))) == 1 &amp;amp; result$room[x] != 0) break
    
    # Print out room sizes tested
    cat(paste0(&amp;#39;Room size tested:&amp;#39;, i, &amp;#39;\tprobability:&amp;#39;, round(result$p[x], 3), &amp;#39;\n&amp;#39;))
    
    # Counter for steps
    x &amp;lt;- x + 1          
  }
  ans &amp;lt;- R
  return(list(answer=ans,
              result=result[1:x,]))
}

system.time(y&amp;lt;-gbp(k=2, p=.5))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Room size tested:57  probability:0.99
## Room size tested:29  probability:0.682
## Room size tested:15  probability:0.251
## Room size tested:22  probability:0.476
## Room size tested:26  probability:0.598
## Room size tested:24  probability:0.538
## Room size tested:23  probability:0.509&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    user  system elapsed 
##   4.450   0.249   5.043&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Yes, I set the final &lt;span class=&#34;math inline&#34;&gt;\(R\)&lt;/span&gt; as answer. The reason why &lt;span class=&#34;math inline&#34;&gt;\(R\)&lt;/span&gt; is the correct answer rather than &lt;span class=&#34;math inline&#34;&gt;\(L\)&lt;/span&gt; is because in the binary search algorithm, the middle point is always set to ceiling. If you set the middle point to floor, it is also true that &lt;span class=&#34;math inline&#34;&gt;\(R\)&lt;/span&gt; is the right answer, because we want the simulated probability a bit &lt;em&gt;above&lt;/em&gt; target probability.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;y&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## $answer
## [1] 23
## 
## $result
##   room       p
## 1  114 0.00000
## 2   57 0.98982
## 3   29 0.68201
## 4   15 0.25094
## 5   22 0.47575
## 6   26 0.59825
## 7   24 0.53800
## 8   23 0.50932
## 9   23 0.50665&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;replicate-size&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Replicate size&lt;/h3&gt;
&lt;p&gt;Same logic can be applied to replicate size. We only need to increase replicates size when close to the target probability. If we know there are still hundreds of rooms size between current roome size and ideal room size, simulating a room size for millions times seems to be bad idea. As we are getting closer to the ideal room size, accuracy becomes more and more important. Accuracy may not be a big deal when &lt;em&gt;k&lt;/em&gt; is 2 or 3, since the ideal room size is small. However, for larger &lt;em&gt;k&lt;/em&gt;, for example, 8, then the efficiency become important for the first few steps.&lt;/p&gt;
&lt;p&gt;To gradually increase replicate size, a sigmoidal curve might be a good idea.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;B_l &amp;lt;- 1000
B_u &amp;lt;- 20000
x &amp;lt;- 1:500
y &amp;lt;- floor(-B_u/(1+exp(-.03* (x-200))))+(B_u+B_l)
plot(x, y, type=&amp;#39;l&amp;#39;, xlab=&amp;#39;distance to ideal room size&amp;#39;, ylab=&amp;#39;replicate size&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2018-03-14-generalized-birthday-problem_files/figure-html/unnamed-chunk-9-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;When we are approximately 400 persons away the ideal room size, just do 1000 replicates. Whereas almost being to the goal, try 20000 replicates. Then the function can be modified as followed.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gbp &amp;lt;- function(k=2, p=.5, B_l=1000, B_u=20000, threshold=.001) {
  i &amp;lt;- k                       # Tested room size; start from k persons in a room
  x &amp;lt;- 1                       # Counter for while loop
  L &amp;lt;- 0                       # Lower bound for binary search
  R &amp;lt;- k^4+100+sample(-k:k, 1) # Upper bound for binary search
  
  # Create an empty data frame for result
  result &amp;lt;- setNames(data.frame(matrix(0, 100, 3)), c(&amp;quot;room&amp;quot;, &amp;quot;p&amp;quot;, &amp;quot;replicate&amp;quot;))
  
  while (abs(result$room[x] - p) &amp;gt;= threshold) {
    # Increase replicate when approaching target room size
    r &amp;lt;- floor(-B_u/(1+exp(-.03* ((R-L)-200))))+(B_u+B_l)
    result$replicate[x] &amp;lt;- r
    
    # Test room size i
    i &amp;lt;- ceiling((L+R)/2)
    result$room[x] &amp;lt;- i 

    # Calculate probability
    birth &amp;lt;- matrix(sample(1:365, r*i, replace=TRUE), nrow=r, ncol=i)
    result$p[x] &amp;lt;- sum(apply(birth, 1, function(x) max(tabulate(x))&amp;gt;=k )) / r
    if (result$p[x] &amp;gt;= p) R &amp;lt;- i
    if (result$p[x] &amp;lt; p) L &amp;lt;- i
    
    # Break the loop if trapped
    if(sum(duplicated(tail(result$room[1:x], 2))) == 1 &amp;amp; result$room[x] != 0) break
    
    # Print out room sizes tested
    cat(paste0(&amp;#39;Room size tested:&amp;#39;, i, &amp;#39;\tprobability:&amp;#39;, round(result$p[x], 3), &amp;#39;\treplicate size: &amp;#39;, r, &amp;#39;\n&amp;#39;))
    
    # Counter for steps
    x &amp;lt;- x + 1          
 }
  ans &amp;lt;- R
  return(list(answer=ans,
              result=result[1:x,]))
}

system.time(y&amp;lt;-gbp(k=8, p=.5))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Room size tested:2098    probability:1   replicate size: 1000
## Room size tested:1049    probability:0.97    replicate size: 1000
## Room size tested:525 probability:0.049   replicate size: 1000
## Room size tested:787 probability:0.49    replicate size: 1001
## Room size tested:918 probability:0.81    replicate size: 3694
## Room size tested:853 probability:0.643   replicate size: 18759
## Room size tested:820 probability:0.562   replicate size: 20647
## Room size tested:804 probability:0.515   replicate size: 20867
## Room size tested:796 probability:0.497   replicate size: 20917
## Room size tested:800 probability:0.505   replicate size: 20937
## Room size tested:798 probability:0.501   replicate size: 20944
## Room size tested:797 probability:0.497   replicate size: 20947
## Room size tested:798 probability:0.5 replicate size: 20949&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    user  system elapsed 
##   6.357   1.024   7.704&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;y&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## $answer
## [1] 23
## 
## $result
##   room         p replicate
## 1  116 0.0000000         0
## 2   58 0.9880000      1000
## 3   29 0.6809149     20985
## 4   15 0.2538821     20994
## 5   22 0.4782816     20996
## 6   26 0.5960183     20996
## 7   24 0.5389818     20997
## 8   23 0.5041196     20997
## 9   23 0.5096442         0&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I will continue the rest of this project in another post.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>How to build up this website?</title>
      <link>/post/how-to-build-up-this-website/</link>
      <pubDate>Thu, 08 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/how-to-build-up-this-website/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://changyuchang.name/post/how-to-build-up-this-website/#intro&#34;&gt;Intro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://changyuchang.name/post/how-to-build-up-this-website/#tutorials&#34;&gt;Tutorials&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://changyuchang.name/post/how-to-build-up-this-website/#caveats-i-have-jumped-in&#34;&gt;Caveats I have jumped in&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&#34;intro&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Intro&lt;/h1&gt;
&lt;p&gt;The first (meaningful) post for this new website! After searching for many blog managers, I finally found out a cool and nice way to generate a good-looking website. The whole website is built under a &lt;code&gt;R&lt;/code&gt; package &lt;code&gt;blogdown&lt;/code&gt;, which is based on another pretty handy package &lt;code&gt;rmarkdown&lt;/code&gt; that helps you markdown pdf or html file in Rstudio. &lt;code&gt;blogdown&lt;/code&gt; employs a site generator called Hugo. With that, there are numerous &lt;a href=&#34;http://themes.gohugo.io&#34;&gt;themes&lt;/a&gt; developed by other Hugo users.&lt;/p&gt;
&lt;p&gt;Some other features would be detailedly described in tutorials, here I wanna spent more time on the problems that I encountered during making the website.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;tutorials&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Tutorials&lt;/h1&gt;
&lt;p&gt;Though now everything seems straightforward, it took me many hours to figure out how to make this website… Anyway, check these sources out!&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;a href=&#34;https://bookdown.org/yihui/bookdown/&#34;&gt;bookdown: Authoring Books and Technical Documents with R Markdown&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;A book from authors. I found the most useful section is the first few paragraphs introducing the package and ‘&lt;em&gt;1.7 A recommended workflow&lt;/em&gt;’. The details are somehow not clear to me, because I had no experience building a website and Github. For people like me just starting to use github, I recommend the tutorials followed.&lt;/p&gt;
&lt;ol start=&#34;2&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;a href=&#34;https://alison.rbind.io/post/up-and-running-with-blogdown/&#34;&gt;Another tutorial (more pictures and workflow) from the author&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I like the flowchart that this tutorial uses to decribe the workflow. More pictures, more intuitive.&lt;/p&gt;
&lt;ol start=&#34;3&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;a href=&#34;https://cosx.org/2018/01/build-blog-with-blogdown-hugo-netlify-github/&#34;&gt;Tutorial for blogdown in Chinese (中文教學)&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Found this one later after I have almost finished the whole website. It’s helpful if you read Chinese.&lt;/p&gt;
&lt;ol start=&#34;4&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;a href=&#34;https://support.rstudio.com/hc/en-us/articles/200532077-Version-Control-with-Git-and-SVN&#34;&gt;Tutorial for using github with Rstudio&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This one shows how to connect github with Rstudio. Also check out &lt;a href=&#34;http://r-bio.github.io/intro-git-rstudio/&#34;&gt;this one&lt;/a&gt; if you like more illustrationss. After downloading git, the simplest way to do this is as followed: create a github respository, copy the link, go back to Rstudio and create a R package under vision control, paste the link, and be happy. If you read Chinese, this &lt;a href=&#34;https://hellolynn.hpd.io/2017/01/18/git%E6%96%B0%E6%89%8B%E5%85%A5%E9%96%80%E6%95%99%E5%AD%B8-part-1/&#34;&gt;website&lt;/a&gt; really helped me understand how git works.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;caveats-i-have-jumped-in&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Caveats I have jumped in&lt;/h1&gt;
&lt;p&gt;Belows are some caveats I have spent a lot of time troubleshooting.&lt;/p&gt;
&lt;div id=&#34;theme-choose-a-well-documented-theme.&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;1. Theme! Choose a well documented theme.&lt;/h3&gt;
&lt;p&gt;I chose &lt;a href=&#34;https://github.com/gcushen/hugo-academic/&#34;&gt;hugo-academic&lt;/a&gt; for my website. One very first reason is the detailed description about each tunable feature. Another reason is intuitive: this website is designed for person in academics.&lt;/p&gt;
&lt;p&gt;In the beginning, I browsed through all the themes and cannot make the choice. The first theme that I picked has elegant design and comfortable layout but shows very limited information about how to tune some of the features. So when the other coding/building problems came in, I did’t know where the problem was from. Be wise to choose a beautiful and well described theme.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;make-sure-you-understand-how-git-and-github-work-and-how-rstudio-interacts-with-them.&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;2. Make sure you understand how git and github work, and how Rstudio interacts with them.&lt;/h3&gt;
&lt;p&gt;For people who have intensively used github, this might be trivial. But it was NOT trivial to me at all to understand how it works. It took me a while (maybe 0.5-1 hour reading about the introduction articles) to understand what git and github are, and how to push code from Rstudio to github.&lt;/p&gt;
&lt;p&gt;Here are my understanding of these terms.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Rstudio: the interface for you to write r, rmd, and other codes.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;git: a version control system for a team to track changes in code. Yes, a team. Now this is your personal website so that the only team member is you. Noted that it is possible to share the source code with other team members and co-manage the source code on github.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;github: an online and open-source version of git. You need an github account to use &lt;code&gt;blogdown&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Hugo: a site generator, like a witchcraft beautifying your website. I guess the reason that &lt;code&gt;blogdown&lt;/code&gt; authors recommends Hugo is that there are many user-contributed themes available. Authors also provide the &lt;a href=&#34;https://bookdown.org/yihui/blogdown/migration.html&#34;&gt;way&lt;/a&gt; to migrate from other site generators, such as Jekyll and WordPress.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;netlify: deploys static website from your source code on github, and provides free domains (where your website will have a prefix “.name”). If you have registered a domain outside netlify for yourself, you could also customize your domain to what you like.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;some-commands-and-steps-only-need-to-be-done-once.&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;3. Some commands and steps only need to be done once.&lt;/h3&gt;
&lt;p&gt;For example, to initiate the website, you only need to go through the workflow below once:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;Connect Rstudio with github by createing a new project under vision control (you can see this option when creating a new R project: “Vision control”)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create a new website by the function &lt;code&gt;blogdown::new_site(sample=&#39;TRUE&#39;, theme=&#39;hugo_academic&#39;)&lt;/code&gt;. It will create a skeleton under your project folder locally. You can change to a theme you like. The argument &lt;code&gt;sample&lt;/code&gt; create a sample in &lt;code&gt;/theme&lt;/code&gt; folder, which you can refer to in the future if you remove a feature and want it back again.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Push code to github.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Connect the &lt;code&gt;/public&lt;/code&gt; folder in your github respository (not the local folder in your laptop) to netlify by simply dragging the folder to netlify. Set up deploy settings, check hugo version (see next caveat), and click deploy.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Your website becomes alive!&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Now this is the most important part. I say important because it took me hours to do silly things again and again without fully comprehension. To update the website, there are something you do or do not need to do.&lt;/p&gt;
&lt;div id=&#34;do-to-update&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Do to update&lt;/h4&gt;
&lt;p&gt;After initiating, in order to update the website, you edit the static website in Rstudio in your laptop. You will see the git window in Rstudio shows new “modified” items. &lt;code&gt;blogdown&lt;/code&gt; will automatically update local &lt;code&gt;/public&lt;/code&gt; (“local” means in your laptop) every time your save the &lt;code&gt;.rm&lt;/code&gt; or &lt;code&gt;.rmd&lt;/code&gt; file. When you update blogs locally, the only thing you need to do is to push the updated code (the whole folder of your website, although only github &lt;code&gt;/public&lt;/code&gt; is used to deploy) to github, and wait for netlify to automatically deploy. It might take a few minutes for netlifly to deploy your website, but don’t worry – things getting simplier after the first try.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;dont-do-it-after-website-initiated&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Don’t do it after website initiated&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Don’t build the new site again by &lt;code&gt;new_site()&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Better not change the theme after editing on it. Stick to the theme you choose.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Don’t need to depoly manually after github connected to netlify.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Don’t manully deploy the website again on netlify.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;check-hugo-version-and-make-sure-its-right-in-netlify&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;4. Check Hugo version, and make sure it’s right in netlify&lt;/h3&gt;
&lt;p&gt;If you find netlify doesn’t deploy your website successfully (and comes in with error 255), it might be due to the Hugo version. Some themes are built under later Hugo version. Make sure you check the Hugo version that &lt;code&gt;blogdown&lt;/code&gt; uses by the function &lt;code&gt;blogdown::hugo_version()&lt;/code&gt;. Now the version is:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;blogdown::hugo_version()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;#39;0.37.1&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Go to netlify deploy setting / Build environment variables / Type in the key &lt;em&gt;HUGO_VERSION&lt;/em&gt; and value &lt;em&gt;0.37.1&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;there-is-updating-problem-with-chinese-characters.&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;5. There is updating problem with Chinese characters.&lt;/h3&gt;
&lt;p&gt;I have a stong incentive to write random stuffs in Chinese. There is problem updating the website locally in Rstudio Viewer when some Chinese characters showing in the website. I still don’t know why.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Migration and Microbial Community</title>
      <link>/project/migration-microbial-community/</link>
      <pubDate>Thu, 08 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>/project/migration-microbial-community/</guid>
      <description>&lt;p&gt;Something about the migration project.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>New website!</title>
      <link>/post/new-website/</link>
      <pubDate>Thu, 08 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/new-website/</guid>
      <description>&lt;p&gt;Test how to post.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>New website!</title>
      <link>/post/new-website/</link>
      <pubDate>Thu, 08 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/new-website/</guid>
      <description>&lt;p&gt;Test how to post.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Some toy models</title>
      <link>/project/toy-models/</link>
      <pubDate>Thu, 08 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>/project/toy-models/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://changyuchang.netlify.com/post/generalized-birthday-problem/&#34; target=&#34;_blank&#34;&gt;Generalized birthday problem&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://changyuchang.netlify.com/post/generalized-birthday-problem-rcpp/&#34; target=&#34;_blank&#34;&gt;Generalized birthday problem: Rcpp&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
